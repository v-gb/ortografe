#!/bin/bash
set -e -u -o pipefail
cd "$(dirname "${BASH_SOURCE[0]}")"

if [ "${1-part1}" = part1 ]; then
    {
        sqlite3 -bail <<'EOF'
.mode csv
.import ../data/erofa/DOR.csv t
alter table t rename column "Grafie initiale" to old;
alter table t rename column "Grafie modifiée" to new;
select old, new
from t
where old != ''
and old not like 'héro' -- on laisse tomber tout ça, car le sens de héroîque
and old not like 'héroïne' -- garde le h, mais le sens de la drogue non, et comme on ne
and old not like 'héroïq%' -- peut pas distinguer, garder tous les h est préférable
and old not like '%philippin%' -- le jeu « phillipine » peut-être réécrit, mais pas le pays, donc on préfère ne pas avoir l'entrée
and old not like 'eczém%' -- 1990 pas pris en compte
and old not like 'kabbale' -- 1990 pas pris en compte
and old not like 'flûtiaux' -- 1990 pas pris en compte
and old not like 'bonneterie' -- 1990 pas pris en compte
and old not like 'crécerelle' -- 1990 pas pris en compte -- https://ro.ccdmd.qc.ca/regles-et-liste-de-mots
and not (old like 'prud’hom%' or old like 'prud''om%') -- 1990 pas pris en compte -- https://ro.ccdmd.qc.ca/regles/anomalies/familles/liste -- pas d'apostrophe
and not old like 'appas' -- 1990 pas pris en compte -- https://ro.ccdmd.qc.ca/regles/anomalies/divers/liste
and not old like 'paella' -- 1990 pas pris en compte -- https://ro.ccdmd.qc.ca/regles/accents-trema/emprunts/liste
and old not like 'vacill%' -- entrée utilise une prononcation /l/, mais /j/ est plus courant
and not (old like 'achène' or old like 'achaine') -- pris en compte de 1990 bancale -- https://ro.ccdmd.qc.ca/regles/recommandations/son-k/liste
and old not like 'sheikh' -- 1990 pas pris en compte
and old not like 'œcuméni%' -- œ->eu. Autant utiliser é comme pour les autres œ
and new not like 'eudémat%' -- préfère œ->é à œ->eu
and old not like 'déhotter' -- sans le préfixe, le h est aspiré, donc il est à garder ici
and old not like '%succion%' -- prononciation en /s/ au lieu /ks/ est possible mais moins commune
and old not like 'wallonne' -- erreur du DOR, qui touche un nom de peuple
and old not like 'zorille' -- prononcé /y/, pas /l/
and new not like 'couane'
and new not like 'couaneus' -- préfère couène, prononciation plus répandue, https://dictionnaire.orthodidacte.com/article/prononciation-couenne
EOF
    } \
        | tr -d '"' \
        | sed 's/ *([^)]*)//g' \
        | LANG=C sort -u \
        | cat > dict.external-sources.gen.csv

    {
        sqlite3 -bail <<'EOF'
.mode csv
create table t(before,after);
.import dict.external-sources.gen.csv t
select replace(replace(before,"œ","oe"),"æ","ae") as rewritten, after
from t
where rewritten != before and rewritten != after
EOF
    } \
        | tr -d '"' \
        | LANG=C sort \
        | cat >> dict.external-sources.gen.csv

    {
        # sqlite doesn't support outer joins, so we do two left joins
        # to combine the wiktionary and lexique+recto/verso data.
        # In a couple of cases, the two dbs don't agree ("absous"
        # is one case), so we just drop these cases.
        # The resulting table includes regular plurals that we could
        # drop, but the table is small so whatever.
        sqlite3 -bail <<'EOF'
.mode csv
.import ../data/lexique/1990.csv l

.import ../data/homemade/1990-extra.csv e
insert into l(ortho,type,post90) select ortho,type,post90 from e;
drop table e;

.import ../data/wiktionnaire/1990.csv w

.import ../data/wiktionnaire/1990-corrections.csv e
update w
set post1990 = e.post1990
from e
where w.pre1990 = e.pre1990;
drop table e;

select distinct l.ortho,
       case
       when l.type = 1
       then l.post90
       else
         case
         when l.ortho like '%s' or l.ortho like '%x'
         then substring(l.post90,instr(l.post90,'/')+1)
         else substring(l.post90,1,instr(l.post90,'/')-1)
         end
       end as suggested_new
from l
left join w on l.ortho = w.pre1990
where (w.post1990 is null
       or case 
          when l.type = 1 then l.post90 = w.post1990
          else substring(l.post90,instr(l.post90,'/')+1) = w.post1990
            or substring(l.post90,1,instr(l.post90,'/')-1) = w.post1990
          end)
and suggested_new <> l.ortho
and l.ortho <> "fût" -- the nom is rewritten, not the verb
union all
select distinct w.pre1990,w.post1990
from w
left join l on l.ortho = w.pre1990
where l.ortho is null
and w.pre1990 <> w.post1990
and w.pre1990 = lower(w.pre1990)
order by 1
EOF
    } \
        | tr -d '"' \
        | LANG=C sort \
        | cat >> dict1990.gen.csv
fi

if [ "${1-part2}" = part2 ]; then
    cp --no-preserve=all dict.external-sources.gen.csv dict.gen.csv
    cat ../data/homemade/dict-erofa-ext.csv >> dict.gen.csv

    # Ensure these proper nouns are not rewritten due to the common noun with the same
    # spelling.
    for w in Pierre Cannes Rennes Vienne Bordeaux Nivelles Sylvain Gilles; do
        echo $w,
    done >> dict.gen.csv

    function string_of_file {
        echo -n \"; tr '\n' '/' < $1; echo \";
    }

    {
        echo "const dict_erofa = $(string_of_file dict.gen.csv)"
        echo "const dict_rect1990 = $(string_of_file dict1990.gen.csv)"
    } > dict.js
fi
